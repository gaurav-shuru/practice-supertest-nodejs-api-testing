{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-06T03:16:44.313Z",
    "end": "2023-06-06T03:16:47.642Z",
    "duration": 3329,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f7ec197e-970d-4e29-bd97-36c3f0ff7c0c",
      "title": "",
      "fullFile": "D:\\Projects\\project-shuru\\API Testing\\battle-preparation-1\\test\\posts.js",
      "file": "\\test\\posts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a854243-06e1-494e-ae38-766ea5518944",
          "title": "TESTING posts API",
          "fullFile": "D:\\Projects\\project-shuru\\API Testing\\battle-preparation-1\\test\\posts.js",
          "file": "\\test\\posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ad187c84-e457-4b08-a913-4ff3e50a504e",
              "title": "Negative Tests",
              "fullFile": "D:\\Projects\\project-shuru\\API Testing\\battle-preparation-1\\test\\posts.js",
              "file": "\\test\\posts.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "401 Authentication failed",
                  "fullTitle": "TESTING posts API Negative Tests 401 Authentication failed",
                  "timedOut": false,
                  "duration": 1513,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "17027563-ea68-46d5-8989-36d5c9007bbd",
                  "parentUUID": "ad187c84-e457-4b08-a913-4ff3e50a504e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "422 Validation failed",
                  "fullTitle": "TESTING posts API Negative Tests 422 Validation failed",
                  "timedOut": false,
                  "duration": 1804,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b4fb09ff-f725-4086-a604-ef8548e66351",
                  "parentUUID": "ad187c84-e457-4b08-a913-4ff3e50a504e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17027563-ea68-46d5-8989-36d5c9007bbd",
                "b4fb09ff-f725-4086-a604-ef8548e66351"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3317,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}